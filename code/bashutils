# this file contains the utility bash functions to be added into .bashrc (by using the source command)
# most of these functions should be portable on all Linux systems

# a macro-like variable to check for sudo usage
# functions using this feature should specify "--sudo" as their first argument
# also, they should declare a local variable with name __sudocmd and __sudopt
SUDO_CHECK="if [[ \"\$1\" == --sudo ]]; then __sudocmd='sudo '; __sudopt='--sudo'; shift; else sudocmd=''; fi"

# swap 2 files
function swapf {
	local tmp_name=/tmp/$RANDOM$RANDOM.tmp
	local __sudocmd=""

	eval $SUDO_CHECK

	${__sudocmd}mv "$1" $tmp_name
	${__sudocmd}mv "$2" "$1"
	${__sudocmd}mv $tmp_name "$2"
}

# back up a file or directory
function bak {
	local __sudocmd=""
	local __base=0

	eval $SUDO_CHECK

	while [ -n "$1" ]; do
		case "$1" in
		-b | --base )
			__base=1
			;;
		*)
			break
			;;
		esac
		shift
	done

	while [ -n "$1" ]; do
		local base_name="$1"
		local new_name="$1".bak
		local count=0
		if [ $__base -eq 0 ]; then
			while [ -e "$new_name" ]; do
				count=$(($count+1))
				new_name="$base_name".bak"$count"
			done
		fi
		${__sudocmd}cp "$base_name" "$new_name" -R
		shift
	done
}

# url encode of a string
function urlencode {
	local string="$1"
	local strlen=${#string}
	local encoded=""

	for (( pos=0 ; pos<strlen ; pos++ )); do
		c=${string:$pos:1}
		case "$c" in
			[-_.~a-zA-Z0-9] )
				o="$c" ;;
			* )
				printf -v o "%%%02x" "'$c'"
		esac
		encoded="$encoded""$o"
	done
	echo "$encoded"
}

# url decode of a string
function urldecode {
	local decoded=""

	printf -v decoded "%b" "${1//%/\x}"
	echo "$decoded"
}

# kill a process tree
# killtree <PID> <SIGNAL>
function killtree {
	local __sudocmd=""
	local __sudopt=""
	local _pid=$1
	local _sig=$2

	eval $SUDO_CHECK

	# needed to stop quickly forking parent from producing children between child killing and parent killing
	${__sudocmd}kill -stop ${_pid}
	for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
		killtree ${__sudopt} ${_child} ${_sig}
	done
	${__sudocmd}kill ${_sig} ${_pid}
}

# switch audio sink to sony headset
function ps4hs {
	local sink_num=$(pacmd list-sinks | grep -B 1 "Sony_Computer" | head -1 | sed 's/.*index: \([0-9]*\).*/\1/')
	pacmd set-default-sink $sink_num
}

# cleanup docker junks
function dockclean {
	docker images -q --filter "dangling=true" | xargs docker rmi
	docker volume ls -qf dangling=true | xargs -r docker volume rm
}

# cut, but extended (works with variable whitespaces)
function ecut {
	local _num=$1
	sed 's/\(\s\)\+/ /g' | cut -d' ' -f $1
}

function docksh {
  docker exec -it "$1" bash
}

function docklog {
	if [ -n "$2" ]; then
		docker logs -ft --tail "$2" "$1"
	else
		docker logs -ft --tail 10 "$1"
	fi
}
